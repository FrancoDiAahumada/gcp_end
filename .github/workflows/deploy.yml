name: Deploy Weather ETL Pipeline to GCP

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: weather-etl-pipeline-464514
  REGION: us-central1

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ env.PROJECT_ID }}
    
    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.PROJECT_ID }}
    
    - name: Verify Authentication and Set Project
      run: |
        echo "Configurando proyecto: $PROJECT_ID"
        gcloud config set project $PROJECT_ID
        gcloud config list project
        gcloud auth list
        echo "Proyecto configurado correctamente"
    
    - name: Enable required APIs
      run: |
        echo "Habilitando APIs necesarias..."
        gcloud services enable cloudfunctions.googleapis.com || echo "‚ö†Ô∏è No se pudo habilitar Cloud Functions API"
        gcloud services enable cloudbuild.googleapis.com || echo "‚ö†Ô∏è No se pudo habilitar Cloud Build API"
        gcloud services enable logging.googleapis.com || echo "‚ö†Ô∏è No se pudo habilitar Logging API"
        gcloud services enable monitoring.googleapis.com || echo "‚ö†Ô∏è No se pudo habilitar Monitoring API"
        gcloud services enable bigquery.googleapis.com || echo "‚ö†Ô∏è No se pudo habilitar BigQuery API"
        echo "‚úÖ Intento de habilitaci√≥n de APIs completado"
    
    - name: Deploy Weather Extract Function
      run: |
        echo "Desplegando funci√≥n de extracci√≥n..."
        gcloud functions deploy weather_extract \
          --runtime python311 \
          --trigger-http \
          --entry-point main \
          --source ./weather-etl-extract \
          --region=$REGION \
          --project=$PROJECT_ID \
          --allow-unauthenticated \
          --timeout=540s \
          --memory=512MB \
          --gen2 \
          --set-env-vars PROJECT_ID=$PROJECT_ID,BUCKET_NAME=weather-etl-bucket,DATASET_ID=weather_analytics,OPENWEATHER_API_KEY=${{ secrets.OPENWEATHER_API_KEY }}
    
    - name: Deploy Weather Transform Function
      run: |
        echo "Desplegando funci√≥n de transformaci√≥n..."
        gcloud functions deploy weather_transform \
          --runtime python311 \
          --trigger-http \
          --entry-point main \
          --source ./weather-etl-transform \
          --region=$REGION \
          --project=$PROJECT_ID \
          --allow-unauthenticated \
          --timeout=540s \
          --memory=256MB \
          --gen2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.0.0
    
    - name: Terraform Init
      run: |
        cd terraform
        terraform init
    
    - name: Terraform Plan
      run: |
        cd terraform
        terraform plan \
          -var="project_id=$PROJECT_ID" \
          -var="notification_email=${{ secrets.NOTIFICATION_EMAIL }}"
    
    - name: Terraform Apply
      run: |
        cd terraform
        terraform apply -auto-approve \
          -var="project_id=$PROJECT_ID" \
          -var="notification_email=${{ secrets.NOTIFICATION_EMAIL }}"
    
    - name: Test Functions
      run: |
        echo "Probando funciones desplegadas..."
        
        # Test extract function
        EXTRACT_URL=$(gcloud functions describe weather_extract --region=$REGION --format="value(serviceConfig.uri)" --gen2)
        echo "URL de extracci√≥n: $EXTRACT_URL"
        
        # Test transform function
        TRANSFORM_URL=$(gcloud functions describe weather_transform --region=$REGION --format="value(serviceConfig.uri)" --gen2)
        echo "URL de transformaci√≥n: $TRANSFORM_URL"
        
        echo "‚úÖ Funciones disponibles desplegadas correctamente"
    
    - name: Deploy Summary
      run: |
        echo "üéâ Despliegue completado exitosamente"
        echo "üìç Proyecto: $PROJECT_ID"
        echo "üåç Regi√≥n: $REGION"
        echo "üîß Funciones desplegadas:"
        echo "   - weather_extract (Gen2)"
        echo "   - weather_transform (Gen2)" 
        echo "üìä Infraestructura de monitoreo configurada"
        echo "‚úâÔ∏è Alertas por email configuradas"